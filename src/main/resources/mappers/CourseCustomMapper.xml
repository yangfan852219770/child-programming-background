<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.child.programming.base.mapper.CourseCustomMapper">
  <resultMap id="BaseResultMap" type="com.child.programming.base.model.TbCourseDo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 25 19:37:56 CST 2019.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="period_count" jdbcType="INTEGER" property="periodCount" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="max_capacity" jdbcType="INTEGER" property="maxCapacity" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="photo_url" jdbcType="VARCHAR" property="photoUrl" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_id" jdbcType="INTEGER" property="lastUpdateId" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, period_count, code, max_capacity, money, telephone, introduction, photo_url, 
    status, create_id, create_time, last_update_id, last_update_time
  </sql>


  <select id="getClassNowByExample" parameterType="Map" resultMap="BaseResultMap">
--     SELECT * from course where id IN(
--     SELECT
--     DISTINCT(co.id)
--     FROM
--     grade g
--     LEFT JOIN classroom c ON g.classroom_id = c.id and c.`status`=1
--     LEFT JOIN school s ON c.school_id = s.id and s.`status` =1
--     LEFT JOIN course co ON g.course_id = co.id
--     LEFT JOIN teacher t on g.teacher_id = t.id and t.`status`=1
    select c.* from
    (
    SELECT
    DISTINCT(co.id),g.start_date,g.end_date
    FROM
    grade g
    LEFT JOIN classroom c ON g.classroom_id = c.id and c.`status`=1
    LEFT JOIN school s ON c.school_id = s.id and s.`status` =1
    LEFT JOIN course co ON g.course_id = co.id
    LEFT JOIN teacher t on g.teacher_id = t.id and t.`status`=1
    <where>
      <if test="courseName != null">
        and co.name LIKE #{courseName}
      </if>
      <if test="selectSchoolId != null">
        AND s.id=#{selectSchoolId}
      </if>
      <if test="teacherId != null">
        AND t.id = #{teacherId}
      </if>
      <if test="lowDate != null and heighDate !=null">
        and g.start_date BETWEEN #{lowDate} and #{heighDate}
      </if>
      <if test="lowPrice != null and heighPrice == null">
        and co.money  &gt; #{lowPrice}
      </if>
      <if test="heighPrice != null and lowPrice == null">
        and co.money  &lt;  #{heighPrice}
      </if>
      <if test="lowPrice != null and heighPrice !=null">
        and co.money BETWEEN #{lowPrice} AND #{heighPrice}
      </if>
    </where>
     GROUP BY co.id
    ) tmpc
    LEFT JOIN course c
    on tmpc.id = c.id
    where tmpc.end_date>NOW()
    ORDER BY tmpc.start_date
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>

  </select>



  <select id="getCourseDetailByCourseId" parameterType="Integer" resultType="com.child.programming.app.web.dto.CourseArrange">
SELECT
  g.id as id,
  CONCAT(s.address,s.`name`,c. CODE) as gradeAddress,
  g.`name` as gradeName,
  t.`name` as teacherName,
  g.max_capacity as capacity,
  g.current_period as currentPeriod,
  CONCAT(DATE_FORMAT(g.start_date,'%Y-%m-%d'),'~',DATE_FORMAT(g.end_date,'%Y-%m-%d')) as druingDate,
  g.weekends_schedule as weekendsSchedule
FROM
  grade g
    LEFT JOIN classroom c ON c.id = g.classroom_id and c.`status`=1
    LEFT JOIN school s ON s.id = c.school_id and s.`status` =1
    LEFT JOIN teacher t on t.id = g.teacher_id and t.`status`=1
WHERE
  g.`status`=1 AND
      g.course_id = #{courseId}
  </select>


  <select id="getStudentSignUpCourseList" parameterType="Map" resultType="com.child.programming.app.web.dto.SignUpCourseDto">
    SELECT
    ssu.grade_id classId,
    g.`name` gradeName,
    ssu.sign_up_time signUpTime,
    g.end_date endTime,
    ssu.is_payment isPayment,
    g.course_id courseId,
    c.`name` courseName,
    c.money money,
    c.period_count periodCount,
    g.current_period currentPeriod,
    t.`name` teacherName,
    t.photo_url photoUrl
    FROM
    student_sign_up ssu
    LEFT JOIN grade g ON ssu.grade_id = g.id AND g.`status`=1
    LEFT JOIN course c on c.id= g.course_id and c.`status`=1
    LEFT JOIN teacher t on t.id = g.teacher_id AND t.`status`=1
    WHERE
    ssu.`status`=1 AND ssu.student_id = #{studentId}
    ORDER BY ssu.sign_up_time desc
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>

  </select>

  <select id="getStudentSignUpCourseHistoryList" parameterType="Map" resultType="com.child.programming.app.web.dto.SignUpCourseDto">
    SELECT
    ssu.grade_id classId,
    g.`name` gradeName,
    ssu.sign_up_time signUpTime,
    g.end_date endTime,
    ssu.is_payment isPayment,
    g.course_id courseId,
    c.`name` courseName,
    c.money money,
    c.period_count periodCount,
    g.current_period currentPeriod,
    t.`name` teacherName,
    t.photo_url photoUrl
    FROM
    student_sign_up ssu
    LEFT JOIN grade g ON ssu.grade_id = g.id AND g.`status`=1
    LEFT JOIN course c on c.id= g.course_id and c.`status`=1
    LEFT JOIN teacher t on t.id = g.teacher_id AND t.`status`=1
    WHERE
    ssu.`status`=1 AND ssu.is_payment=1 AND ssu.student_id = #{studentId}
    ORDER BY ssu.sign_up_time desc
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>

  </select>


  <select id="getStudentCourseClassList" parameterType="Map" resultType="com.child.programming.app.web.dto.SignUpCourseDto">
    SELECT
    ssu.grade_id classId,
    g.`name` gradeName,
    ssu.sign_up_time signUpTime,
    g.end_date endTime,
    ssu.is_payment isPayment,
    g.course_id courseId,
    c.`name` courseName,
    c.money money,
    c.period_count periodCount,
    g.current_period currentPeriod,
    t.`name` teacherName,
    t.photo_url photoUrl
    FROM
    student_sign_up ssu
    LEFT JOIN grade g ON ssu.grade_id = g.id AND g.`status`=1
    LEFT JOIN course c on c.id= g.course_id and c.`status`=1
    LEFT JOIN teacher t on t.id = g.teacher_id AND t.`status`=1
    WHERE
    NOW() BETWEEN g.start_date AND g.end_date AND ssu.`status`=1 AND ssu.is_payment=1 AND ssu.student_id = #{studentId}
    ORDER BY ssu.sign_up_time desc
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>

  </select>

  <select id="getStudentCourseListByDate" parameterType="Map" resultType="com.child.programming.app.web.dto.SignUpCourseDto">
    SELECT
    ssu.grade_id classId,
    g.`name` gradeName,
    ssu.sign_up_time signUpTime,
    g.end_date endTime,
    ssu.is_payment isPayment,
    g.course_id courseId,
    c.`name` courseName,
    c.money money,
    c.period_count periodCount,
    g.current_period currentPeriod,
    t.`name` teacherName,
    t.photo_url photoUrl
    FROM
    student_sign_up ssu
    LEFT JOIN grade g ON ssu.grade_id = g.id AND g.`status`=1
    LEFT JOIN course c on c.id= g.course_id and c.`status`=1
    LEFT JOIN teacher t on t.id = g.teacher_id AND t.`status`=1
    WHERE
      #{selectDate} BETWEEN g.start_date AND g.end_date AND ssu.`status`=1 AND ssu.is_payment=1
      AND g.weekends_schedule LIKE #{week} AND ssu.student_id = #{studentId}
    ORDER BY ssu.sign_up_time desc

  </select>


  <select id="getStudentCollectCourseList" parameterType="Map" resultType="com.child.programming.base.model.TbCourseDo">
    SELECT
    c.id id,c.`name` name,c.period_count periodCount,c.`code` code,c.max_capacity maxCapacity,c.money money,c.telephone,c.introduction,c.photo_url photoUrl,
    c.`status`,c.create_id createId,c.create_time createTime,c.last_update_id lastUpdateId,c.last_update_time lastUpdateTime
    FROM
    collect_course cc
    LEFT JOIN course c on cc.course_id = c.id
    WHERE
    cc.`status` = '1'
    AND cc.student_id = #{studentId}
    ORDER BY
    cc.create_time DESC
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow},#{pageSize}
    </if>
  </select>

  <select id="getCourseDetailByGradeId" parameterType="Integer" resultType="com.child.programming.app.web.dto.CourseArrange">
    SELECT
      g.id as id,
      CONCAT(s.address,s.`name`,c. CODE) as gradeAddress,
      g.`name` as gradeName,
      t.`name` as teacherName,
      g.max_capacity as capacity,
      g.current_period as currentPeriod,
      CONCAT(DATE_FORMAT(g.start_date,'%Y-%m-%d'),'~',DATE_FORMAT(g.end_date,'%Y-%m-%d')) as druingDate,
      g.weekends_schedule as weekendsSchedule
    FROM
      grade g
        LEFT JOIN classroom c ON c.id = g.classroom_id and c.`status`=1
        LEFT JOIN school s ON s.id = c.school_id and s.`status` =1
        LEFT JOIN teacher t on t.id = g.teacher_id and t.`status`=1
    WHERE
      g.`status`=1 AND
      g.id = #{gradeId}
  </select>

  <select id="getCourseDetaiListByGradeIdSet" parameterType="java.util.Set" resultType="com.child.programming.education.manage.dto.CourseDetailDto">
    SELECT gra.id AS gradeId,gra.name AS gradeName,
    cou.id AS courseId,cou.name AS courseName,
    cla.id AS classroomId,cla.code AS classroomCode,
    sch.id AS schoolId,sch.name AS schoolName
    from grade AS gra
    LEFT JOIN course AS cou ON gra.course_id=cou.id
    LEFT JOIN classroom AS cla  ON gra.classroom_id=cla.id
    LEFT JOIN school AS sch ON cla.school_id=sch.id
    where gra.status=1
    AND gra.id IN
    <foreach collection="collection" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>

  </select>

</mapper>